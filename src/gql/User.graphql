query me {
  user: me {
    ...MeUser
  }
}

mutation signup($data: UserSignupDataInput!) {
  response: signup(data: $data) {
    success
    message
    errors {
      key
      message
    }
    token
    data {
      ...UserNoNesting
    }
  }
}

fragment MeUser on User {
  ...UserNoNesting
  CodeChallengeCompletions {
    ...MeUserCodeChallengeCompletion
  }
  EthAccounts {
    id
    address
    balance(convert: ether)
  }
  Timers(first: 1, where: { stopedAt: null }) {
    ...MeUserTimer
  }
}

fragment MeUserTimer on Timer {
  id
  createdAt
  stopedAt
  Task {
    id
    name
    status
    TaskProjects {
      id
      createdAt
      updatedAt
      Project {
        id
        type
        name
      }
    }
  }
}
